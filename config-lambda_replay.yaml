###################################
## Section: Basic Configuration ##
###################################

# ----------------------
# Property: debug_level
# ----------------------
# Description: The debug output level. INFO is the default and provides general status logging
# Possible values: DEBUG|INFO|WARNING|ERROR
#
debug_level: INFO


# ----------------------
# Property: region_name
# ----------------------
# Description: The AWS region
#
region_name: 'us-east-1'

# -----------------------
# Property: function_name
# -----------------------
# Description: The name of the lambda function which will be sent the scraped events.
#
function_name: kworker

# ----------------------
# Property: stream_name
# ----------------------
# Description: The name of the stream you want to replay.
# Needed to properly rebuild the event.Records[].eventSourceARN payload metadata sent to the lambda.
#
stream_name: user-activities3


# --------------------
# Property: batch_size
# --------------------
# Description: How many events per batch should be sent to the lambda.
#
# Note: The Kinesis-SLR will preserve the original event Records structure Kinesis normally sends to the lambda as
# possible. However, the following value will be set to local::kinesis-slr due to the Kinesis-SLR not having this information.
#  - event.Records[].invokeIdentityArn
#
batch_size: 20 # Max 10000

# --------------------
# Property: local_dlq
# --------------------
# Description: Utilizes a local dlq (/dlq directory) to dump failed messages in the same manner they would
# be sent to an SQS dlq.
#
local_dlq: True

# -----------------------------
# Property: local_dlq_fullevent
# -----------------------------
# Description: If true, rather than utilizing AWS' metadata-only contents a DQL message normally contains
# when being sent to an SQS dlq, the Kinesis-SLR will instead drop the exact .json file it builds when
# scraping events to disk. This allows for a "second replay" of any dlq'd messages to occur by simply
# deleting all the event messages from the events directory, then copying the .json files from the /dlq
# directory back into the events directory and re-running the replay option.
#
local_dlq_fullevent: True

# -------------------------
# Property: retry_attempts
# -------------------------
# Description: The number of times a retry should occur before moving the message/batch (depending on integration mode)
# and move to a local dlq (if set) then aborting
#
# Note: If set to 0, no retries will occur. Only a single attempt will be made.
retry_attempts: 0 # Max 5

# -------------------------
# Property: bisect_on_error
# -------------------------
# Description: Mimic the behavior and integration handling as though bisectBatchOnFunctionError=1 (split batch on error)
#
bisect_on_error: False

# ---------------------------------
# Property: tumbling_window_seconds
# ---------------------------------
# Description: Mimic the behavior and integration handling as though TumblingWindowInSeconds=X was set.
#
# Note: This feature is not yet available and kept here as a placeholder.
#
tumbling_window_seconds: N/A # Do NOT use the Kinesis-SLR if your lambda requires this option to function!

# ---------------------------------
# Property: custom_checkpoints
# ---------------------------------
# Description: Mimic the behavior and integration handling as though ReportBatchItemFailures=1 was set.
# For custom checkpoints handling docs, see:
# https://aws.amazon.com/blogs/compute/optimizing-batch-processing-with-custom-checkpoints-in-aws-lambda/
#
# Note: This feature is not yet available and kept here as a placeholder.
#
custom_checkpoints: N/A # Do NOT use the Kinesis-SLR if your lambda requires this option to function!
